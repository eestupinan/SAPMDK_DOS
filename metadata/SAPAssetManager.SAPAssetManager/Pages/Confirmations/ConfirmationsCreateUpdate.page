{
	"ActionBar": {
		"Items": [
			{
				"OnPress": "/SAPAssetManager/Actions/Page/CancelPage.action",
				"Position": "left",
				"SystemItem": "Cancel"
			},
			{
				"OnPress": "/SAPAssetManager/Actions/Confirmations/CheckRequiredFieldOnConfirmations.action",
				"Position": "right",
				"SystemItem": "/SAPAssetManager/Rules/Common/Platform/DoneIcon.js",
				"Text": "/SAPAssetManager/Rules/Common/Platform/DoneText.js"
			}
		]
	},
	"Caption": "/SAPAssetManager/Rules/Confirmations/CreateUpdate/PageTitle.js",
	"Controls": [
		{
			"Sections": [
				{
					"Controls": [
						{
							"AllowMultipleSelection": false,
							"Caption": "$(L, workorder)",
							"IsEditable": "/SAPAssetManager/Rules/Confirmations/CreateUpdate/IsWorkOrderChangable.js",
							"OnValueChange": "/SAPAssetManager/Rules/Confirmations/CreateUpdate/OnWorkOrderChanged.js",
							"PickerItems": {
								"DisplayValue": "{{#Property:OrderId}} - {{#Property:OrderDescription}}",
								"ReturnValue": "{OrderId}",
								"Target": {
									"EntitySet": "MyWorkOrderHeaders",
									"QueryOptions": "/SAPAssetManager/Rules/Confirmations/CreateUpdate/WorkOrderPickerQueryOptions.js",
									"Service": "/SAPAssetManager/Services/AssetManager.service"
								}
							},
							"Search": {
								"BarcodeScanner": true,
								"Delay": 500,
								"Enabled": true,
								"MinimumCharacterThreshold": 3,
								"Placeholder": "$(L, search)"
							},
							"Value": "{OrderID}",
							"_Name": "WorkOrderLstPkr",
							"_Type": "Control.Type.FormCell.ListPicker"
						},
						{
							"Caption": "$(L, confirmation_title, '')  $(L, ID)",
							"IsEditable": false,
							"IsVisible": "/SAPAssetManager/Rules/Confirmations/CreateUpdate/IsOnUpdate.js",
							"Value": "{ConfirmationNum}",
							"_Name": "ConfirmationIdProperty",
							"_Type": "Control.Type.FormCell.SimpleProperty"
						},
						{
							"Caption": "$(L, date)",
							"DateTimeEntryMode": "date",
							"IsEditable": false,
							"Mode": "Date",
							"Value": "{_Start}",
							"_Name": "StartDatePicker",
							"_Type": "Control.Type.FormCell.DatePicker"
						},
						{
							"Caption": "$(L, start_time)",
							"DateTimeEntryMode": "time",
							"IsEditable": false,
							"Mode": "Time",
							"Value": "{_Start}",
							"_Name": "StartTimePicker",
							"_Type": "Control.Type.FormCell.DatePicker"
						},
						{
							"Caption": "$(L,duration)",
							"IsEditable": true,
							"MinuteInterval": "/SAPAssetManager/Rules/TimeSheets/Entry/CreateUpdate/TimeSheetEntryMinuteInterval.js",
							"Unit": "M",
							"Value": "/SAPAssetManager/Rules/Confirmations/CreateUpdate/LaborTimeMinuteInterval.js",
							"_Name": "DurationPkr",
							"_Type": "Control.Type.FormCell.DurationPicker"
						},
						{
							"AllowMultipleSelection": false,
							"Caption": "$(L, activity_type)",
							"IsEditable": "/SAPAssetManager/Rules/Confirmations/CreateUpdate/IsWorkOrderSelected.js",
							"OnValueChange": "/SAPAssetManager/Rules/Confirmations/CreateUpdate/OnListPickerValueChanged.js",
							"PickerItems": {
								"DisplayValue": "{{#Property:ActivityType}} - {{#Property:ActivityTypeDescription}}",
								"ReturnValue": "{ActivityType}",
								"Target": {
									"EntitySet": "COActivityTypes",
									"QueryOptions": "/SAPAssetManager/Rules/Confirmations/CreateUpdate/ActivityPickerQueryOptions.js",
									"Service": "/SAPAssetManager/Services/AssetManager.service"
								}
							},
							"Value": "{ActivityType}",
							"_Name": "ActivityTypePkr",
							"_Type": "Control.Type.FormCell.ListPicker"
						},
						{
							"AllowMultipleSelection": false,
							"Caption": "$(L, operation)",
							"IsEditable": "/SAPAssetManager/Rules/Confirmations/CreateUpdate/IsOperationChangable.js",
							"OnValueChange": "/SAPAssetManager/Rules/Confirmations/CreateUpdate/OnOperationChanged.js",
							"PickerItems": {
								"DisplayValue": "{{#Property:OperationNo}} - {{#Property:OperationShortText}}",
								"ReturnValue": "{OperationNo}",
								"Target": {
									"EntitySet": "MyWorkOrderOperations",
									"QueryOptions": "/SAPAssetManager/Rules/Confirmations/CreateUpdate/OperationPickerQueryOptions.js",
									"Service": "/SAPAssetManager/Services/AssetManager.service"
								}
							},
							"Value": "{{#Property:Operation}}",
							"_Name": "OperationPkr",
							"_Type": "Control.Type.FormCell.ListPicker"
						},
						{
							"AllowMultipleSelection": false,
							"Caption": "$(L, sub_operation_hyphenated)",
							"IsEditable": "/SAPAssetManager/Rules/Confirmations/CreateUpdate/IsSubOperationChangable.js",
							"OnValueChange": "/SAPAssetManager/Rules/Confirmations/CreateUpdate/OnListPickerValueChanged.js",
							"PickerItems": {
								"DisplayValue": "{{#Property:SubOperationNo}} - {{#Property:OperationShortText}}",
								"ReturnValue": "{SubOperationNo}",
								"Target": {
									"EntitySet": "MyWorkOrderSubOperations",
									"QueryOptions": "/SAPAssetManager/Rules/Confirmations/CreateUpdate/SubOperationPickerQueryOptions.js",
									"Service": "/SAPAssetManager/Services/AssetManager.service"
								}
							},
							"Value": "{{#Property:SubOperation}}",
							"_Name": "SubOperationPkr",
							"_Type": "Control.Type.FormCell.ListPicker"
						},
						{
							"AllowMultipleSelection": false,
							"Caption": "$(L, variance_reason)",
							"IsEditable": "/SAPAssetManager/Rules/Confirmations/CreateUpdate/IsWorkOrderSelected.js",
							"OnValueChange": "/SAPAssetManager/Rules/Confirmations/CreateUpdate/OnListPickerValueChanged.js",
							"PickerItems": {
								"DisplayValue": "{{#Property:VarianceReason}} - {{#Property:ReasonText}}",
								"ReturnValue": "{VarianceReason}",
								"Target": {
									"EntitySet": "VarianceReasons",
									"QueryOptions": "/SAPAssetManager/Rules/Confirmations/CreateUpdate/VariancePickerQueryOptions.js",
									"Service": "/SAPAssetManager/Services/AssetManager.service"
								}
							},
							"Value": "{{#Property:VarianceReason}}",
							"_Name": "VarianceReasonPkr",
							"_Type": "Control.Type.FormCell.ListPicker"
						},
						{
							"AllowMultipleSelection": false,
							"Caption": "$(L, account_indicator)",
							"IsEditable": true,
							"OnValueChange": "/SAPAssetManager/Rules/Confirmations/CreateUpdate/OnListPickerValueChanged.js",
							"PickerItems": {
								"DisplayValue": "{{#Property:AcctIndicator}} - {{#Property:AcctIndicatorDesc}}",
								"ReturnValue": "{AcctIndicator}",
								"Target": {
									"EntitySet": "AcctIndicators",
									"QueryOptions": "$orderby=AcctIndicator asc",
									"Service": "/SAPAssetManager/Services/AssetManager.service"
								}
							},
							"Value": "{{#Property:AccountingIndicator}}",
							"_Name": "AcctIndicatorPkr",
							"_Type": "Control.Type.FormCell.ListPicker"
						},
						{
							"Caption": "$(L, confirmation_set_final)",
							"IsEditable": "{IsFinalChangable}",
							"IsVisible": "/SAPAssetManager/Rules/Confirmations/CreateUpdate/IsFinalConfirmationVisible.js",
							"Value": "{IsFinal}",
							"_Name": "IsFinalConfirmation",
							"_Type": "Control.Type.FormCell.Switch"
						}
					],
					"Visible": true
				},
				{
					"Controls": [
						{
							"Caption": "$(L,notes)",
							"IsAutoResizing": true,
							"PlaceHolder": "$(L,notes)",
							"Value": "#Property:LongText/#Property:TextString",
							"_Name": "DescriptionNote",
							"_Type": "Control.Type.FormCell.Note"
						}
					],
					"Visible": true
				},
				{
					"Controls": [
						{
							"IsVisible": "/SAPAssetManager/Rules/Confirmations/CreateUpdate/IsOnUpdate.js",
							"OnPress": "/SAPAssetManager/Rules/Common/DiscardAction.js",
							"TextAlignment": "center",
							"Title": "$(L,discard)",
							"_Name": "DiscardButton",
							"_Type": "Control.Type.FormCell.Button"
						}
					],
					"Visible": true
				}
			],
			"_Name": "FormCellContainer",
			"_Type": "Control.Type.FormCellContainer"
		}
	],
	"OnLoaded": "/SAPAssetManager/Rules/Confirmations/CreateUpdate/ConfirmationCreateUpdateOnPageLoad.js",
	"_Name": "ConfirmationsCreateUpdatePage",
	"_Type": "Page"
}